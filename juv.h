#ifndef __JYUV_H  
#define __JYUV_H  
  
typedef unsigned char  u8;  
typedef unsigned short u16;  
typedef unsigned int   u32;  

/*
BMP（全称Bitmap）是Windows操作系统中的标准图像文件格式
BMP格式的文件从头到尾依次是如下信息：
1.bmp文件头（bmp file header）：共14字节；
2.位图信息头（bitmap information）：共40字节；
3.调色板（color palette）：可选；大小由颜色索引数决定
4.位图数据；就是图像数据啦	大小由图像尺寸决定

位图数据解析:
每个像素占一个字节，取得这个字节后，以该字节为索引查询相应的颜色，并显示到相应的显示设备上就可以了。
注意：由于位图信息头中的图像高度是正数，所以位图数据在文件中的排列顺序是从左下角到右上角，以行为主序排列的。
也即我们见到的第一个像素60是图像最左下角的数据，第二个人像素60为图像最后一行第二列的数
据，…一直到最后一行的最后一列数据，后面紧接的是倒数第二行的第一列的数据，依此类推。
如果图像是24位或是32位数据的位图的话，位图数据区就不是索引而是实际的像素值了。下面说
明一下，此时位图数据区的每个像素的RGB颜色阵列排布：
24位RGB按照BGR的顺序来存储每个像素的各颜色通道的值，一个像素的所有颜色分量值都存完后
才存下一个下一个像素，不进行交织存储。


最常见的就是24位图，所谓的24位图，就是说一个像素的颜色信息用24位来表示，也就是说，对
于三原色RGB，每一个颜色都用以字节（8）位来表示，这样的图像我们称为真彩色，这种情况下
是不需要调色板的，也就是所位图信息头后面紧跟的就是位图数据了。除了24位图，还有1位
（单色），2位（4色，CGA），4位（16色，VGA），8位（256色），16位（增强色），24位（真彩色）和32位等。
如hello.bmp文件:
尺寸 640*480即宽度640像素 高度480像素
位深度24
这样的文件没有调色板,从文件头开始偏移54个字节就是位图数据了.
如果位图是16位、24位和32位色，则图像文件中不保留调色板，即不存在调色板，图像的颜色直接在位图数据中给出。
16位图像使用2字节保存颜色值，常见有两种格式：5位红5位绿5位蓝和5位红6位绿5位蓝，即555格式和565格式。555格式只使用了15位，最后一位保留，设为0。
24位图像使用3字节保存颜色值，每一个字节代表一种颜色，按红、绿、蓝排列。
32位图像使用4字节保存颜色值，每一个字节代表一种颜色，除了原来的红、绿、蓝，还有Alpha通道，即透明色。



16bpp (全称bitperpixel)使用16位的数据来表示一个像素的颜色，数据格式分5:6:5(高5位表
示红色，中间6位表示绿色，最低5位表示蓝色)和5:5:5:1(从高到低依次为红：绿：蓝：透明度，
故又称RGBA)两种，4个字节可以表示2个16BPP的像素，高2字节还是低2字节表示第一像素可以通
过HWSWP值决定。
*/

#pragma pack(1)  
//定义bmp头  
struct bmp_header_t{
    u16        magic;  		//-文件类型
    u32       file_size;  	//-文件大小,目前这个大小不具有通用性
    u32       RESERVED1;  	//-保留，必须设置为0
    u32       offset;         //54 bytes 表示54个偏移量(从头到位图数据的偏移)  
  
    u32       head_num;    //40  信息头的大小，即40 这个大小也是不固定的目前有56
    u32       width;  		//-以像素为单位说明图像的宽度
    u32       height;  		//-以像素为单位说明图像的高度
    u16       color_planes; //1  为目标设备说明颜色平面数，总被设置为1
    u16       bit_count;  	//-说明比特数/像素数，值有1、2、4、8、16、24、32；
    u32       bit_compression; //0  说明图像的压缩类型，最常用的就是0（BI_RGB），表示不压缩
    u32       image_size; //except the size of header  说明位图数据的大小，当用BI_RGB格式时，可以设置为0
    u32       h_resolution;  //-表示水平分辨率，单位是像素/米，有符号整数；
    u32       v_resolution;  //-表示垂直分辨率，单位是像素/米，有符号整数；
    u32       color_num;  //-说明位图使用的调色板中的颜色索引数，为0说明使用所有；
    u32       important_colors;  //-说明对图像显示有重要影响的颜色索引数，为0说明都重要；
};
  
#pragma pack()  
  
void set_bmp_header(struct bmp_header_t * header, u32 width, u32 height);  
int yuyv2rgb24(u8 *yuyv, u8 *rgb, u32 width, u32 height);  
  
#endif /* __JYUV_H */   